{"ast":null,"code":"import Animated from \"react-native-reanimated\";\nvar divide = Animated.divide,\n    sub = Animated.sub,\n    multiply = Animated.multiply;\nexport var translateZ = function translateZ(perspective, z) {\n  return {\n    scale: divide(perspective, sub(perspective, z))\n  };\n};\nexport var translate = function translate(_ref) {\n  var translateX = _ref.x,\n      translateY = _ref.y;\n  return [{\n    translateX: translateX\n  }, {\n    translateY: translateY\n  }];\n};\nexport var transformOrigin = function transformOrigin(_ref2) {\n  var x = _ref2.x,\n      y = _ref2.y;\n\n  for (var _len = arguments.length, transformations = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    transformations[_key - 1] = arguments[_key];\n  }\n\n  return [{\n    translateX: x\n  }, {\n    translateY: y\n  }].concat(transformations, [{\n    translateX: multiply(x, -1)\n  }, {\n    translateY: multiply(y, -1)\n  }]);\n};","map":{"version":3,"sources":["Transformations.ts"],"names":["divide","sub","multiply","Animated","translateZ","scale","translate","translateX","translateY","transformOrigin","x","y","transformations"],"mappings":"AAAA,OAAA,QAAA,MAAA,yBAAA;AAKQA,IAAAA,M,GAA0BG,Q,CAA1BH,MAAAA;AAAAA,IAAQC,G,GAAkBE,Q,CAAlBF,GAARD;AAAAA,IAAaE,Q,GAAaC,Q,CAAbD,QAAbF;AAQR,OAAO,IAAMI,UAAU,GAAVA,SAAAA,UAAAA,CAAa,WAAbA,EAAa,CAAbA,EAAa;AAAA,SAGpB;AAAEC,IAAAA,KAAK,EAAEL,MAAM,CAAA,WAAA,EAAcC,GAAG,CAAA,WAAA,EAHZ,CAGY,CAAjB;AAAf,GAHoB;AAAnB,CAAA;AAKP,OAAO,IAAMK,SAAS,GAATA,SAAAA,SAAAA,CAAY,IAAZA,EAAY;AAAA,MAAMC,UAAN,GAAA,IAAA,CAAA,CAAA;AAAA,MAAqBC,UAArB,GAAA,IAAA,CAAA,CAAA;AAAA,SAA6C,CACpE;AAAED,IAAAA,UAAU,EADwD;AACpE,GADoE,EAEpE;AAAEC,IAAAA,UAAU,EAFW;AAEvB,GAFoE,CAA7C;AAAlB,CAAA;AAKP,OAAO,IAAMC,eAAe,GAAfA,SAAAA,eAAAA,CAAkB,KAAlBA,EAAkB;AAAA,MAC3BC,CAD2B,GAAA,KAAA,CAAA,CAAA;AAAA,MACxBC,CADwB,GAAA,KAAA,CAAA,CAAA;;AAAA,OAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAE1BC,eAF0B,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAE1BA,IAAAA,eAF0B,CAAA,IAAA,GAAA,CAAA,CAE1BA,GAF0B,SAAA,CAAA,IAAA,CAE1BA;AAF0B;;AAAA,SAAA,CAI7B;AAAEL,IAAAA,UAAU,EAJiB;AAI7B,GAJ6B,EAK7B;AAAEC,IAAAA,UAAU,EALiB;AAK7B,GAL6B,EAAA,MAAA,CAAA,eAAA,EAAA,CAO7B;AAAED,IAAAA,UAAU,EAAEL,QAAQ,CAAA,CAAA,EAAI,CAPG,CAOP;AAAtB,GAP6B,EAQ7B;AAAEM,IAAAA,UAAU,EAAEN,QAAQ,CAAA,CAAA,EAAI,CARG,CAQP;AAAtB,GAR6B,CAAA,CAAA;AAAxB,CAAA","sourcesContent":["import Animated from \"react-native-reanimated\";\nimport { TransformsStyle } from \"react-native\";\n\nimport { Point } from \"./Coordinates\";\n\nconst { divide, sub, multiply } = Animated;\n\ntype AnimatedTransform = {\n  [P in keyof TransformsStyle[\"transform\"]]: Animated.Adaptable<\n    TransformsStyle[\"transform\"][P]\n  >;\n};\n\nexport const translateZ = (\n  perspective: Animated.Adaptable<number>,\n  z: Animated.Adaptable<number>\n) => ({ scale: divide(perspective, sub(perspective, z)) });\n\nexport const translate = ({ x: translateX, y: translateY }: Point) => [\n  { translateX },\n  { translateY }\n];\n\nexport const transformOrigin = (\n  { x, y }: Point,\n  ...transformations: AnimatedTransform[]\n): AnimatedTransform[] => [\n  { translateX: x },\n  { translateY: y },\n  ...transformations,\n  { translateX: multiply(x, -1) },\n  { translateY: multiply(y, -1) }\n];\n"]},"metadata":{},"sourceType":"module"}