{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport axios from 'axios';\n\nvar apiCallGet = function apiCallGet(uri, token) {\n  return new Promise(function _callee(resolve, reject) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(uri, {\n              headers: {\n                Authorization: \"Token \" + token\n              }\n            }));\n\n          case 3:\n            res = _context.sent;\n            resolve(res.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            reject(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n};\n\nvar apiCallPost = function apiCallPost(uri, body) {\n  return new Promise(function _callee2(resolve, reject) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'post',\n              url: uri,\n              data: body,\n              headers: {\n                'Content-Type': 'multipart/form-data'\n              }\n            }));\n\n          case 3:\n            res = _context2.sent;\n            resolve(res.data);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            reject(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n};\n\nexport { apiCallGet, apiCallPost };","map":{"version":3,"sources":["C:/Users/neelk/Downloads/covid19-hack-master/covid19-hack-master/api/index.js"],"names":["React","axios","apiCallGet","uri","token","Promise","resolve","reject","get","headers","Authorization","res","data","apiCallPost","body","method","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,KAAN;AAAA,SACjB,IAAIC,OAAJ,CAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQN,KAAK,CAACO,GAAN,CAAUL,GAAV,EAAe;AAC7BM,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,aAAa,aAAWN;AAA1B;AADoB,aAAf,CAFR;;AAAA;AAEJO,YAAAA,GAFI;AAKRL,YAAAA,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP;AALQ;AAAA;;AAAA;AAAA;AAAA;AAORL,YAAAA,MAAM,aAAN;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,CADiB;AAAA,CAAnB;;AAYA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACV,GAAD,EAAMW,IAAN;AAAA,SAClB,IAAIT,OAAJ,CAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEQN,KAAK,CAAC;AACpBc,cAAAA,MAAM,EAAE,MADY;AAEpBC,cAAAA,GAAG,EAAEb,GAFe;AAGpBS,cAAAA,IAAI,EAAEE,IAHc;AAIpBL,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB;AAJW,aAAD,CAFb;;AAAA;AAEJE,YAAAA,GAFI;AAQRL,YAAAA,OAAO,CAACK,GAAG,CAACC,IAAL,CAAP;AARQ;AAAA;;AAAA;AAAA;AAAA;AAURL,YAAAA,MAAM,cAAN;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,CADkB;AAAA,CAApB;;AAeA,SAASL,UAAT,EAAqBW,WAArB","sourcesContent":["import React from 'react';\r\nimport { AsyncStorage } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst apiCallGet = (uri, token) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      let res = await axios.get(uri, {\r\n        headers: { Authorization: `Token ${token}` }\r\n      });\r\n      resolve(res.data);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nconst apiCallPost = (uri, body) =>\r\n  new Promise(async (resolve, reject) => {\r\n    try {\r\n      let res = await axios({\r\n        method: 'post',\r\n        url: uri,\r\n        data: body,\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      });\r\n      resolve(res.data);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\nexport { apiCallGet, apiCallPost };\r\n"]},"metadata":{},"sourceType":"module"}