{"ast":null,"code":"import Animated from 'react-native-reanimated';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar cond = Animated.cond,\n    lessOrEq = Animated.lessOrEq,\n    greaterOrEq = Animated.greaterOrEq,\n    add = Animated.add,\n    divide = Animated.divide,\n    sub = Animated.sub,\n    multiply = Animated.multiply,\n    exp = Animated.exp,\n    cos = Animated.cos;\nexport var initialVertRadius = 82;\nexport var maxVertRadius = height * 0.9;\nexport var initialHorRadius = 48;\nexport var maxHorRadius = width * 0.8;\nexport var initialSideWidth = 15;\nexport var initialWaveCenter = height * 0.5;\nexport var sideWidth = function sideWidth(progress) {\n  var p1 = 0.2;\n  var p2 = 0.8;\n  return cond(lessOrEq(progress, p1), initialSideWidth, cond(greaterOrEq(progress, p2), width, add(initialSideWidth, multiply(width - initialSideWidth, divide(sub(progress, p1), p2 - p1)))));\n};\nexport var waveVertRadius = function waveVertRadius(progress) {\n  var p1 = 0.4;\n  return cond(lessOrEq(progress, 0), initialVertRadius, cond(greaterOrEq(progress, p1), maxVertRadius, add(initialVertRadius, multiply(maxVertRadius - initialVertRadius, divide(progress, p1)))));\n};\n\nvar waveHorR = function waveHorR(progress, A, B) {\n  var p1 = 0.4;\n  var t = divide(sub(progress, p1), 1 - p1);\n  var r = 40;\n  var m = 9.8;\n  var beta = r / (2 * m);\n  var k = 50;\n  var omega0 = k / m;\n  var omega = Math.pow(-Math.pow(beta, 2) + Math.pow(omega0, 2), 0.5);\n  return cond(lessOrEq(progress, 0), initialHorRadius, cond(greaterOrEq(progress, 1), 0, cond(lessOrEq(progress, p1), add(initialHorRadius, multiply(divide(progress, p1), B)), multiply(A, exp(multiply(-beta, t)), cos(multiply(omega, t))))));\n};\n\nexport var waveHorRadius = function waveHorRadius(progress) {\n  return waveHorR(progress, maxHorRadius, maxHorRadius - initialHorRadius);\n};\nexport var waveHorRadiusBack = function waveHorRadiusBack(progress) {\n  return waveHorR(progress, 2 * initialHorRadius, initialHorRadius);\n};","map":{"version":3,"sources":["C:/Users/neelk/Downloads/covid19-hack-master/covid19-hack-master/Screens/LiquidSwipe/WeaveHelpers.js"],"names":["Animated","Dimensions","get","height","width","cond","lessOrEq","greaterOrEq","add","divide","sub","multiply","exp","cos","initialVertRadius","maxVertRadius","initialHorRadius","maxHorRadius","initialSideWidth","initialWaveCenter","sideWidth","progress","p1","p2","waveVertRadius","waveHorR","A","B","t","r","m","beta","k","omega0","omega","waveHorRadius","waveHorRadiusBack"],"mappings":"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","sourcesContent":["import Animated from 'react-native-reanimated';\nimport { Dimensions } from 'react-native';\n\nconst { height, width } = Dimensions.get('window');\nconst {\n  cond,\n  lessOrEq,\n  greaterOrEq,\n  add,\n  divide,\n  sub,\n  multiply,\n  exp,\n  cos\n} = Animated;\n\nexport const initialVertRadius = 82;\nexport const maxVertRadius = height * 0.9;\n\nexport const initialHorRadius = 48;\nexport const maxHorRadius = width * 0.8;\n\nexport const initialSideWidth = 15;\n\nexport const initialWaveCenter = height * 0.5;\n\nexport const sideWidth = progress => {\n  const p1 = 0.2;\n  const p2 = 0.8;\n  return cond(\n    lessOrEq(progress, p1),\n    initialSideWidth,\n    cond(\n      greaterOrEq(progress, p2),\n      width,\n      add(\n        initialSideWidth,\n        multiply(width - initialSideWidth, divide(sub(progress, p1), p2 - p1))\n      )\n    )\n  );\n};\n\nexport const waveVertRadius = progress => {\n  const p1 = 0.4;\n  return cond(\n    lessOrEq(progress, 0),\n    initialVertRadius,\n    cond(\n      greaterOrEq(progress, p1),\n      maxVertRadius,\n      add(\n        initialVertRadius,\n        multiply(maxVertRadius - initialVertRadius, divide(progress, p1))\n      )\n    )\n  );\n};\n\nconst waveHorR = (progress, A, B) => {\n  const p1 = 0.4;\n  const t = divide(sub(progress, p1), 1 - p1);\n  const r = 40;\n  const m = 9.8;\n  const beta = r / (2 * m);\n  const k = 50;\n  const omega0 = k / m;\n  const omega = (-(beta ** 2) + omega0 ** 2) ** 0.5;\n  return cond(\n    lessOrEq(progress, 0),\n    initialHorRadius,\n    cond(\n      greaterOrEq(progress, 1),\n      0,\n      cond(\n        lessOrEq(progress, p1),\n        add(initialHorRadius, multiply(divide(progress, p1), B)),\n        multiply(A, exp(multiply(-beta, t)), cos(multiply(omega, t)))\n      )\n    )\n  );\n};\n\nexport const waveHorRadius = progress =>\n  waveHorR(progress, maxHorRadius, maxHorRadius - initialHorRadius);\n\nexport const waveHorRadiusBack = progress =>\n  waveHorR(progress, 2 * initialHorRadius, initialHorRadius);\n"]},"metadata":{},"sourceType":"module"}