{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport Animated, { Easing } from \"react-native-reanimated\";\nvar Clock = Animated.Clock,\n    Value = Animated.Value,\n    block = Animated.block,\n    cond = Animated.cond,\n    stopClock = Animated.stopClock,\n    set = Animated.set,\n    startClock = Animated.startClock,\n    clockRunning = Animated.clockRunning,\n    not = Animated.not,\n    and = Animated.and,\n    reTiming = Animated.timing,\n    reDecay = Animated.decay,\n    reSpring = Animated.spring;\n\nvar onInit = function onInit(clock, sequence) {\n  return cond(not(clockRunning(clock)), sequence);\n};\n\nvar animate = function animate(_ref) {\n  var fn = _ref.fn,\n      clock = _ref.clock,\n      state = _ref.state,\n      config = _ref.config,\n      from = _ref.from;\n  return block([onInit(clock, [set(state.finished, 0), set(state.time, 0), set(state.position, from), startClock(clock)]), fn(clock, state, config), cond(state.finished, stopClock(clock)), state.position]);\n};\n\nexport var timing = function timing(params) {\n  var _clock$easing$duratio = _objectSpread({\n    clock: new Clock(),\n    easing: Easing.linear,\n    duration: 250,\n    from: 0,\n    to: 1\n  }, params),\n      clock = _clock$easing$duratio.clock,\n      easing = _clock$easing$duratio.easing,\n      duration = _clock$easing$duratio.duration,\n      from = _clock$easing$duratio.from,\n      to = _clock$easing$duratio.to;\n\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    toValue: new Value(0),\n    duration: duration,\n    easing: easing\n  };\n  return block([onInit(clock, [set(config.toValue, to), set(state.frameTime, 0)]), animate({\n    clock: clock,\n    fn: reTiming,\n    state: state,\n    config: config,\n    from: from\n  })]);\n};\nexport var decay = function decay(params) {\n  var _clock$velocity$decel = _objectSpread({\n    clock: new Clock(),\n    velocity: new Value(0),\n    deceleration: 0.998,\n    from: 0\n  }, params),\n      clock = _clock$velocity$decel.clock,\n      from = _clock$velocity$decel.from,\n      velocity = _clock$velocity$decel.velocity,\n      deceleration = _clock$velocity$decel.deceleration;\n\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    velocity: new Value(0)\n  };\n  var config = {\n    deceleration: deceleration\n  };\n  return block([onInit(clock, [set(state.velocity, velocity)]), animate({\n    clock: clock,\n    fn: reDecay,\n    state: state,\n    config: config,\n    from: from\n  })]);\n};\nexport var spring = function spring(params) {\n  var _clock$velocity$from$ = _objectSpread({\n    clock: new Clock(),\n    velocity: new Value(0),\n    from: 0\n  }, params),\n      clock = _clock$velocity$from$.clock,\n      from = _clock$velocity$from$.from,\n      velocity = _clock$velocity$from$.velocity,\n      springConfig = _clock$velocity$from$.config,\n      to = _clock$velocity$from$.to;\n\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    velocity: new Value(0)\n  };\n\n  var config = _objectSpread({\n    toValue: new Value(0),\n    damping: 6,\n    mass: 1,\n    stiffness: 64,\n    overshootClamping: false,\n    restSpeedThreshold: 0.01,\n    restDisplacementThreshold: 0.01\n  }, springConfig);\n\n  return block([onInit(clock, [set(config.toValue, to), set(state.velocity, velocity)]), animate({\n    clock: clock,\n    fn: reSpring,\n    state: state,\n    config: config,\n    from: from\n  })]);\n};\nexport var delay = function delay(node, duration) {\n  var clock = new Clock();\n  return block([timing({\n    clock: clock,\n    from: 0,\n    to: 1,\n    duration: duration\n  }), cond(not(clockRunning(clock)), node)]);\n};\nexport var loop = function loop(loopConfig) {\n  var _clock$easing$duratio2 = _objectSpread({\n    clock: new Clock(),\n    easing: Easing.linear,\n    duration: 250,\n    boomerang: false,\n    autoStart: true\n  }, loopConfig),\n      clock = _clock$easing$duratio2.clock,\n      easing = _clock$easing$duratio2.easing,\n      duration = _clock$easing$duratio2.duration,\n      boomerang = _clock$easing$duratio2.boomerang,\n      autoStart = _clock$easing$duratio2.autoStart;\n\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    toValue: new Value(1),\n    duration: duration,\n    easing: easing\n  };\n  return block([cond(and(not(clockRunning(clock)), autoStart ? 1 : 0), startClock(clock)), reTiming(clock, state, config), cond(state.finished, [set(state.finished, 0), set(state.time, 0), set(state.frameTime, 0), boomerang ? set(config.toValue, cond(config.toValue, 0, 1)) : set(state.position, 0)]), state.position]);\n};","map":{"version":3,"sources":["AnimationRunners.ts"],"names":["Clock","Value","block","cond","stopClock","set","startClock","clockRunning","not","and","timing","reTiming","decay","reDecay","spring","reSpring","Animated","onInit","animate","fn","clock","state","config","from","easing","duration","to","Easing","finished","position","time","frameTime","toValue","velocity","deceleration","springConfig","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","delay","loop","boomerang","autoStart"],"mappings":"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","sourcesContent":["import Animated, { Easing } from \"react-native-reanimated\";\nimport { SpringConfig } from \"./Animations\";\n\nconst {\n  Clock,\n  Value,\n  block,\n  cond,\n  stopClock,\n  set,\n  startClock,\n  clockRunning,\n  not,\n  and,\n  timing: reTiming,\n  decay: reDecay,\n  spring: reSpring\n} = Animated;\n\ninterface AnimateParams<S, C> {\n  clock: Animated.Clock;\n  fn: (\n    clock: Animated.Clock,\n    state: S,\n    config: C\n  ) => Animated.Adaptable<number>;\n  state: S;\n  config: C;\n  from: Animated.Adaptable<number>;\n}\n\ninterface TimingAnimation {\n  state: Animated.TimingState;\n  config: Animated.TimingConfig;\n}\n\ninterface SpringAnimation {\n  state: Animated.SpringState;\n  config: Animated.SpringConfig;\n}\n\ninterface DecayAnimation {\n  state: Animated.DecayState;\n  config: Animated.DecayConfig;\n}\n\ntype Animation = SpringAnimation | DecayAnimation | TimingAnimation;\n\nconst onInit = (clock: Animated.Clock, sequence: Animated.Adaptable<number>) =>\n  cond(not(clockRunning(clock)), sequence);\n\nconst animate = <T extends Animation>({\n  fn,\n  clock,\n  state,\n  config,\n  from\n}: AnimateParams<T[\"state\"], T[\"config\"]>) =>\n  block([\n    onInit(clock, [\n      set(state.finished, 0),\n      set(state.time, 0),\n      set(state.position, from),\n      startClock(clock)\n    ]),\n    fn(clock, state, config),\n    cond(state.finished, stopClock(clock)),\n    state.position\n  ]);\n\nexport interface TimingParams {\n  clock?: Animated.Clock;\n  from?: Animated.Adaptable<number>;\n  to?: Animated.Adaptable<number>;\n  duration?: Animated.Adaptable<number>;\n  easing?: Animated.EasingFunction;\n}\n\nexport const timing = (params: TimingParams) => {\n  const { clock, easing, duration, from, to } = {\n    clock: new Clock(),\n    easing: Easing.linear,\n    duration: 250,\n    from: 0,\n    to: 1,\n    ...params\n  };\n\n  const state: Animated.TimingState = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n\n  const config = {\n    toValue: new Value(0),\n    duration,\n    easing\n  };\n\n  return block([\n    onInit(clock, [set(config.toValue, to), set(state.frameTime, 0)]),\n    animate<TimingAnimation>({\n      clock,\n      fn: reTiming,\n      state,\n      config,\n      from\n    })\n  ]);\n};\n\nexport interface DecayParams {\n  clock?: Animated.Clock;\n  from?: Animated.Adaptable<number>;\n  velocity?: Animated.Value<number>;\n  deceleration?: Animated.Adaptable<number>;\n}\n\nexport const decay = (params: DecayParams) => {\n  const { clock, from, velocity, deceleration } = {\n    clock: new Clock(),\n    velocity: new Value(0),\n    deceleration: 0.998,\n    from: 0,\n    ...params\n  };\n\n  const state: Animated.DecayState = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    velocity: new Value(0)\n  };\n\n  const config: Animated.DecayConfig = {\n    deceleration\n  };\n\n  return block([\n    onInit(clock, [set(state.velocity, velocity)]),\n    animate<DecayAnimation>({\n      clock,\n      fn: reDecay,\n      state,\n      config,\n      from\n    })\n  ]);\n};\n\nexport interface SpringParams {\n  clock?: Animated.Clock;\n  from?: Animated.Adaptable<number>;\n  to: Animated.Adaptable<number>;\n  velocity?: Animated.Value<number>;\n  config?: SpringConfig;\n}\n\nexport const spring = (params: SpringParams) => {\n  const { clock, from, velocity, config: springConfig, to } = {\n    clock: new Clock(),\n    velocity: new Value(0),\n    from: 0,\n    ...params\n  };\n\n  const state: Animated.SpringState = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    velocity: new Value(0)\n  };\n\n  const config = {\n    toValue: new Value(0),\n    damping: 6,\n    mass: 1,\n    stiffness: 64,\n    overshootClamping: false,\n    restSpeedThreshold: 0.01,\n    restDisplacementThreshold: 0.01,\n    ...springConfig\n  };\n\n  return block([\n    onInit(clock, [set(config.toValue, to), set(state.velocity, velocity)]),\n    animate<SpringAnimation>({\n      clock,\n      fn: reSpring,\n      state,\n      config,\n      from\n    })\n  ]);\n};\n\nexport const delay = (node: Animated.Node<number>, duration: number) => {\n  const clock = new Clock();\n  return block([\n    timing({ clock, from: 0, to: 1, duration }),\n    cond(not(clockRunning(clock)), node)\n  ]);\n};\n\nexport interface LoopProps {\n  clock?: Animated.Clock;\n  easing?: Animated.EasingFunction;\n  duration?: number;\n  boomerang?: boolean;\n  autoStart?: boolean;\n}\n\nexport const loop = (loopConfig: LoopProps) => {\n  const { clock, easing, duration, boomerang, autoStart } = {\n    clock: new Clock(),\n    easing: Easing.linear,\n    duration: 250,\n    boomerang: false,\n    autoStart: true,\n    ...loopConfig\n  };\n  const state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  const config = {\n    toValue: new Value(1),\n    duration,\n    easing\n  };\n\n  return block([\n    cond(and(not(clockRunning(clock)), autoStart ? 1 : 0), startClock(clock)),\n    reTiming(clock, state, config),\n    cond(state.finished, [\n      set(state.finished, 0),\n      set(state.time, 0),\n      set(state.frameTime, 0),\n      boomerang\n        ? set(config.toValue, cond(config.toValue, 0, 1))\n        : set(state.position, 0)\n    ]),\n    state.position\n  ]);\n};\n"]},"metadata":{},"sourceType":"module"}