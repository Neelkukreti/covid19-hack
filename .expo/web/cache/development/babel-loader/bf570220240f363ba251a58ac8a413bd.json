{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\neelk\\\\Downloads\\\\covid19-hack-master\\\\covid19-hack-master\\\\Screens\\\\LiquidSwipe\\\\index.js\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-reanimated\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Constants from \"expo-constants\";\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\nimport { onGestureEvent, snapPoint } from \"react-native-redash\";\nimport Weave from \"./Weave\";\nimport { followPointer, snapProgress } from \"./AnimationHelpers\";\nimport { initialSideWidth, initialWaveCenter, sideWidth, waveHorRadius, waveHorRadiusBack, waveVertRadius } from \"./WeaveHelpers\";\nimport ContentBack from \"./ContentBack\";\nimport ContentFront from \"./ContentFront\";\nimport Button from \"./Button\";\nexport var assets = [require(\"./assets/bravo.gif\"), require(\"./assets/firstPageImage.png\")];\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar Value = Animated.Value,\n    cond = Animated.cond,\n    multiply = Animated.multiply,\n    divide = Animated.divide,\n    interpolate = Animated.interpolate;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n\nvar index = function index(props) {\n  var y = new Value(initialWaveCenter);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isModalActive = _React$useState2[0],\n      setModalActive = _React$useState2[1];\n\n  var translationX = new Value(0);\n  var velocityX = new Value(0);\n  var state = new Value(State.UNDETERMINED);\n  var gestureHandler = onGestureEvent({\n    translationX: translationX,\n    velocityX: velocityX,\n    y: y,\n    state: state\n  });\n  var maxDist = width - initialSideWidth;\n  var isBack = new Value(0);\n  var gestureProgress = cond(isBack, interpolate(translationX, {\n    inputRange: [0, maxDist],\n    outputRange: [1, 0]\n  }), interpolate(translationX, {\n    inputRange: [-maxDist, 0],\n    outputRange: [0.4, 0]\n  }));\n  var progress = snapProgress(gestureProgress, state, isBack, snapPoint(gestureProgress, divide(multiply(-1, velocityX), cond(isBack, maxDist, multiply(maxDist, 0.4))), [0, 1]));\n  var centerY = followPointer(y);\n  var horRadius = cond(isBack, waveHorRadiusBack(progress), waveHorRadius(progress));\n  var vertRadius = waveVertRadius(progress);\n  var sWidth = sideWidth(progress);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, React.createElement(ContentBack, {\n    backgroundColor: \"white\",\n    source: assets[0],\n    title1: \"Prime\",\n    title2: \"Members\",\n    color: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(PanGestureHandler, _extends({}, gestureHandler, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), React.createElement(Animated.View, {\n    style: StyleSheet.absoluteFill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(Weave, _extends({\n    sideWidth: sWidth\n  }, {\n    centerY: centerY,\n    horRadius: horRadius,\n    vertRadius: vertRadius\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), React.createElement(ContentFront, {\n    backgroundColor: \"#7E89FD\",\n    source: assets[1],\n    title1: \"Special Benefits\",\n    title2: \"FOR YOU\",\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, _extends({\n    y: centerY\n  }, {\n    progress: progress\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })))), React.createElement(LinearGradient, {\n    colors: [\"#FFBF00\", \"#FFDC73\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.navigate(\"Saved\");\n      console.log(props);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      paddingVertical: Platform.OS == \"android\" ? Constants.statusBarHeight + 10 : 40,\n      fontSize: 20,\n      color: \"white\",\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Go PRIME\"))));\n};\n\nexport default index;","map":{"version":3,"sources":["C:/Users/neelk/Downloads/covid19-hack-master/covid19-hack-master/Screens/LiquidSwipe/index.js"],"names":["React","Animated","LinearGradient","Constants","PanGestureHandler","State","onGestureEvent","snapPoint","Weave","followPointer","snapProgress","initialSideWidth","initialWaveCenter","sideWidth","waveHorRadius","waveHorRadiusBack","waveVertRadius","ContentBack","ContentFront","Button","assets","require","Dimensions","get","width","Value","cond","multiply","divide","interpolate","styles","StyleSheet","create","container","flex","index","props","y","useState","isModalActive","setModalActive","translationX","velocityX","state","UNDETERMINED","gestureHandler","maxDist","isBack","gestureProgress","inputRange","outputRange","progress","centerY","horRadius","vertRadius","sWidth","absoluteFill","navigation","navigate","console","log","paddingVertical","Platform","OS","statusBarHeight","fontSize","color","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  Text,\n  TouchableOpacity,\n  Platform,\n} from \"react-native\";\nimport Animated from \"react-native-reanimated\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport Constants from \"expo-constants\";\n\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\nimport { onGestureEvent, snapPoint } from \"react-native-redash\";\nimport Weave from \"./Weave\";\nimport { followPointer, snapProgress } from \"./AnimationHelpers\";\nimport {\n  initialSideWidth,\n  initialWaveCenter,\n  sideWidth,\n  waveHorRadius,\n  waveHorRadiusBack,\n  waveVertRadius,\n} from \"./WeaveHelpers\";\nimport ContentBack from \"./ContentBack\";\nimport ContentFront from \"./ContentFront\";\nimport Button from \"./Button\";\n\nexport const assets = [\n  require(\"./assets/bravo.gif\"),\n  require(\"./assets/firstPageImage.png\"),\n];\n\nconst { width } = Dimensions.get(\"window\");\nconst { Value, cond, multiply, divide, interpolate } = Animated;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nconst index = (props) => {\n  const y = new Value(initialWaveCenter);\n  let [isModalActive, setModalActive] = React.useState(false);\n  const translationX = new Value(0);\n  const velocityX = new Value(0);\n  const state = new Value(State.UNDETERMINED);\n  const gestureHandler = onGestureEvent({\n    translationX,\n    velocityX,\n    y,\n    state,\n  });\n  const maxDist = width - initialSideWidth;\n  const isBack = new Value(0);\n  const gestureProgress = cond(\n    isBack,\n    interpolate(translationX, {\n      inputRange: [0, maxDist],\n      outputRange: [1, 0],\n    }),\n    interpolate(translationX, {\n      inputRange: [-maxDist, 0],\n      outputRange: [0.4, 0],\n    })\n  );\n  const progress = snapProgress(\n    gestureProgress,\n    state,\n    isBack,\n    snapPoint(\n      gestureProgress,\n      divide(\n        multiply(-1, velocityX),\n        cond(isBack, maxDist, multiply(maxDist, 0.4))\n      ),\n      [0, 1]\n    )\n  );\n  const centerY = followPointer(y);\n  const horRadius = cond(\n    isBack,\n    waveHorRadiusBack(progress),\n    waveHorRadius(progress)\n  );\n  const vertRadius = waveVertRadius(progress);\n  const sWidth = sideWidth(progress);\n  return (\n    <View style={styles.container}>\n      <ContentBack\n        backgroundColor=\"white\"\n        source={assets[0]}\n        title1=\"Prime\"\n        title2=\"Members\"\n        color=\"black\"\n      />\n      <PanGestureHandler {...gestureHandler}>\n        <Animated.View style={StyleSheet.absoluteFill}>\n          <Weave sideWidth={sWidth} {...{ centerY, horRadius, vertRadius }}>\n            <ContentFront\n              backgroundColor=\"#7E89FD\"\n              source={assets[1]}\n              title1=\"Special Benefits\"\n              title2=\"FOR YOU\"\n              color=\"#fff\"\n            />\n          </Weave>\n          <Button y={centerY} {...{ progress }} />\n        </Animated.View>\n      </PanGestureHandler>\n      <LinearGradient colors={[\"#FFBF00\", \"#FFDC73\"]}>\n        <TouchableOpacity\n          onPress={() => {\n            props.navigation.navigate(\"Saved\");\n            console.log(props);\n          }}\n        >\n          <Text\n            style={{\n              paddingVertical:\n                Platform.OS == \"android\" ? Constants.statusBarHeight + 10 : 40,\n              fontSize: 20,\n              color: \"white\",\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Go PRIME\n          </Text>\n        </TouchableOpacity>\n      </LinearGradient>\n\n      {/* <TouchableOpacity\n        onPress={() => {\n          props.navigation.goBack();\n        }}\n      >\n        <Text\n          style={{\n            position: 'absolute',\n            left: 30,\n            bottom: 10,\n            padding: 20,\n            borderRadius: 50,\n            backgroundColor: 'white',\n            color: 'black'\n          }}\n        >\n          Back\n        </Text>\n      </TouchableOpacity> */}\n    </View>\n  );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}