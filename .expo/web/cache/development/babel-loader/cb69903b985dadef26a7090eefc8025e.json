{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\neelk\\\\Downloads\\\\covid19-hack-master\\\\covid19-hack-master\\\\Screens\\\\InitialScreen\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar InitialScreen = function (_Component) {\n  _inherits(InitialScreen, _Component);\n\n  var _super = _createSuper(InitialScreen);\n\n  function InitialScreen() {\n    var _this;\n\n    _classCallCheck(this, InitialScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._bootstrapAsync = function _callee() {\n      var token;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n            case 2:\n              token = _context.sent;\n\n              if (!token) {\n                _this.props.navigation.navigate('AppIntro');\n              } else {\n                _this.props.navigation.navigate('App');\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(InitialScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this._bootstrapAsync();\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }\n      }, React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return InitialScreen;\n}(Component);\n\nexport default InitialScreen;","map":{"version":3,"sources":["C:/Users/neelk/Downloads/covid19-hack-master/covid19-hack-master/Screens/InitialScreen/index.js"],"names":["React","Component","InitialScreen","_bootstrapAsync","AsyncStorage","getItem","token","props","navigation","navigate","flex"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;IAGMC,a;;;;;;;;;;;;;;;;UAKJC,e,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADF;;AAAA;AACZC,cAAAA,KADY;;AAGhB,kBAAI,CAACA,KAAL,EAAY;AACV,sBAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD,eAFD,MAEO;AACL,sBAAKF,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,KAA/B;AACD;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;;;;;;AAHhB,mBAAKN,eAAL;;;;;;;;;;;6BAcO;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;;;;EAtByBT,S;;AAwB5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, ActivityIndicator, AsyncStorage } from 'react-native';\r\n\r\nclass InitialScreen extends Component {\r\n  async componentDidMount() {\r\n    this._bootstrapAsync();\r\n  }\r\n\r\n  _bootstrapAsync = async () => {\r\n    let token = await AsyncStorage.getItem('token');\r\n\r\n    if (!token) {\r\n      this.props.navigation.navigate('AppIntro');\r\n    } else {\r\n      this.props.navigation.navigate('App');\r\n    }\r\n    // this.props.navigation.navigate('App');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <ActivityIndicator />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default InitialScreen;\r\n"]},"metadata":{},"sourceType":"module"}