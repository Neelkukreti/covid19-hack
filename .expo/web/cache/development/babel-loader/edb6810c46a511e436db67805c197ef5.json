{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\neelk\\\\Documents\\\\GitHub\\\\covid19-hack\\\\components\\\\Location.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from \"expo-constants\";\nimport * as Location from \"expo-location\";\nimport firebase from \"firebase\";\nvar API_KEY = \"AIzaSyA-BEPYPnVnTggLAhVx9BpwPkqnkLB1Pds\";\nLocation.setApiKey(API_KEY);\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coords = _useState6[0],\n      setCoords = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      address = _useState8[0],\n      setAddress = _useState8[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, latitude, longitude, coords, address;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== \"granted\") {\n                setErrorMsg(\"Permission to access location was denied\");\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n              setLocation(location);\n              latitude = location.coords.latitude;\n              longitude = location.coords.longitude;\n              coords = {\n                latitude: latitude,\n                longitude: longitude\n              };\n              setCoords(coords);\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync(coords));\n\n            case 15:\n              address = _context.sent;\n              setAddress(address);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var login = function login() {\n    var res;\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n          case 3:\n            res = _context2.sent;\n            console.log(res);\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var saveToDB = function saveToDB() {\n    return _regeneratorRuntime.async(function saveToDB$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(firebase.database().ref(\"users\"));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var text = \"Waiting..\";\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (coords) {\n    text = JSON.stringify(address);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.paragraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, text), React.createElement(TouchableOpacity, {\n    onPress: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Login Anonymously\")), React.createElement(TouchableOpacity, {\n    onPress: saveToDB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Login Anonymously\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/neelk/Documents/GitHub/covid19-hack/components/Location.js"],"names":["React","useState","useEffect","Constants","Location","firebase","API_KEY","setApiKey","App","location","setLocation","errorMsg","setErrorMsg","coords","setCoords","address","setAddress","requestPermissionsAsync","status","getCurrentPositionAsync","latitude","longitude","reverseGeocodeAsync","login","auth","signInAnonymously","res","console","log","saveToDB","database","ref","text","JSON","stringify","styles","container","paragraph","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Platform,\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n} from \"react-native\";\nimport Constants from \"expo-constants\";\nimport * as Location from \"expo-location\";\nimport firebase from \"firebase\";\n\nconst API_KEY = \"AIzaSyA-BEPYPnVnTggLAhVx9BpwPkqnkLB1Pds\";\n\nLocation.setApiKey(API_KEY);\n\nexport default function App() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [coords, setCoords] = useState(null);\n  const [address, setAddress] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n\n      setLocation(location);\n\n      let latitude = location.coords.latitude;\n      let longitude = location.coords.longitude;\n\n      let coords = { latitude, longitude };\n      setCoords(coords);\n\n      let address = await Location.reverseGeocodeAsync(coords);\n      setAddress(address);\n    })();\n  }, []);\n\n  const login = async () => {\n    try {\n      let res = await firebase.auth().signInAnonymously();\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const saveToDB = async () => {\n    try {\n      await firebase.database().ref(\"users\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (coords) {\n    text = JSON.stringify(address);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.paragraph}>{text}</Text>\n      <TouchableOpacity onPress={login}>\n        <Text>Login Anonymously</Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={saveToDB}>\n        <Text>Login Anonymously</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}